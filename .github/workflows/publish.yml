name: Publish Interledger API client

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker tag (release or snapshot publish)"
        required: true
        type: choice
        options:
          - release
          - snapshot

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set release version
        id: get_version
        run: |
          echo "Get version from build.gradle.kts"
          PACKAGE_VERSION=$(grep -o 'version = "[^"]*"' build.gradle.kts | cut -d'"' -f2)

          if [ "${{ github.event.inputs.tag }}" == "release" ]; then
            echo "Removing SNAPSHOT for release version"
            RELEASE_VERSION="${PACKAGE_VERSION/-SNAPSHOT/}"
          else
            RELEASE_VERSION="${PACKAGE_VERSION}"
          fi
          
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
          echo "Version for release: $RELEASE_VERSION"

      - name: Publish to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew publish -Prelease.version=${{ env.RELEASE_VERSION }}

      - name: Create Git Tag
        if: ${{ github.event.inputs.tag == 'release'  }}  # Condition to only tag on 'release' versions
        run: |
          USER_EMAIL=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/users/${{ github.actor }}" | jq -r '.email')

          if [[ -z "$USER_EMAIL" || "$USER_EMAIL" == "null" ]]; then
            USER_EMAIL="${{ github.actor }}@users.noreply.github.com"
          fi

          git config --global user.name "${{ github.actor }}"
          git config --global user.email "$USER_EMAIL"
          git tag $RELEASE_VERSION
          git push origin $RELEASE_VERSION
/*
 * Wallet Address API
 * The Wallet Address API is a simple REST API to get basic details about a wallet address.
 *
 * The version of the OpenAPI document: 1.4
 * Contact: tech@interledger.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.fliqa.interledger.client.model;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.fliqa.interledger.ApiClient;
/**
 * A **wallet address** resource is the root of the API and contains the public details of the financial account represented by the Wallet Address that is also the service endpoint URL.
 */
@JsonPropertyOrder({
  WalletAddress.JSON_PROPERTY_ID,
  WalletAddress.JSON_PROPERTY_PUBLIC_NAME,
  WalletAddress.JSON_PROPERTY_ASSET_CODE,
  WalletAddress.JSON_PROPERTY_ASSET_SCALE,
  WalletAddress.JSON_PROPERTY_AUTH_SERVER,
  WalletAddress.JSON_PROPERTY_RESOURCE_SERVER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class WalletAddress extends HashMap<String, Object> {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nonnull
  private URI id;

  public static final String JSON_PROPERTY_PUBLIC_NAME = "publicName";
  @javax.annotation.Nullable
  private String publicName;

  public static final String JSON_PROPERTY_ASSET_CODE = "assetCode";
  @javax.annotation.Nonnull
  private String assetCode;

  public static final String JSON_PROPERTY_ASSET_SCALE = "assetScale";
  @javax.annotation.Nonnull
  private Integer assetScale;

  public static final String JSON_PROPERTY_AUTH_SERVER = "authServer";
  @javax.annotation.Nonnull
  private URI authServer;

  public static final String JSON_PROPERTY_RESOURCE_SERVER = "resourceServer";
  @javax.annotation.Nonnull
  private URI resourceServer;

  public WalletAddress() { 
  }

  @JsonCreator
  public WalletAddress(
    @JsonProperty(JSON_PROPERTY_ID) URI id, 
    @JsonProperty(JSON_PROPERTY_PUBLIC_NAME) String publicName, 
    @JsonProperty(JSON_PROPERTY_AUTH_SERVER) URI authServer, 
    @JsonProperty(JSON_PROPERTY_RESOURCE_SERVER) URI resourceServer
  ) {
  this();
    this.id = id;
    this.publicName = publicName;
    this.authServer = authServer;
    this.resourceServer = resourceServer;
  }

  /**
   * The URL identifying the wallet address.
   * @return id
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public URI getId() {
    return id;
  }




  /**
   * A public name for the account. This should be set by the account holder with their provider to provide a hint to counterparties as to the identity of the account holder.
   * @return publicName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PUBLIC_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPublicName() {
    return publicName;
  }




  public WalletAddress assetCode(@javax.annotation.Nonnull String assetCode) {
    this.assetCode = assetCode;
    return this;
  }

  /**
   * The assetCode is a code that indicates the underlying asset. This SHOULD be an ISO4217 currency code.
   * @return assetCode
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ASSET_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAssetCode() {
    return assetCode;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAssetCode(@javax.annotation.Nonnull String assetCode) {
    this.assetCode = assetCode;
  }


  public WalletAddress assetScale(@javax.annotation.Nonnull Integer assetScale) {
    this.assetScale = assetScale;
    return this;
  }

  /**
   * The scale of amounts denoted in the corresponding asset code.
   * minimum: 0
   * maximum: 255
   * @return assetScale
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ASSET_SCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getAssetScale() {
    return assetScale;
  }


  @JsonProperty(JSON_PROPERTY_ASSET_SCALE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAssetScale(@javax.annotation.Nonnull Integer assetScale) {
    this.assetScale = assetScale;
  }


  /**
   * The URL of the authorization server endpoint for getting grants and access tokens for this wallet address.
   * @return authServer
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTH_SERVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public URI getAuthServer() {
    return authServer;
  }




  /**
   * The URL of the resource server endpoint for performing Open Payments with this wallet address.
   * @return resourceServer
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESOURCE_SERVER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public URI getResourceServer() {
    return resourceServer;
  }



  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   * @param key the name of the property
   * @param value the value of the property
   * @return self reference
   */
  @JsonAnySetter
  public WalletAddress putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) properties.
   * @return the additional (undeclared) properties
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   * @param key the name of the property
   * @return the additional (undeclared) property with the specified name
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  /**
   * Return true if this wallet-address object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletAddress walletAddress = (WalletAddress) o;
    return Objects.equals(this.id, walletAddress.id) &&
        Objects.equals(this.publicName, walletAddress.publicName) &&
        Objects.equals(this.assetCode, walletAddress.assetCode) &&
        Objects.equals(this.assetScale, walletAddress.assetScale) &&
        Objects.equals(this.authServer, walletAddress.authServer) &&
        Objects.equals(this.resourceServer, walletAddress.resourceServer)&&
        Objects.equals(this.additionalProperties, walletAddress.additionalProperties) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, publicName, assetCode, assetScale, authServer, resourceServer, super.hashCode(), additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletAddress {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    publicName: ").append(toIndentedString(publicName)).append("\n");
    sb.append("    assetCode: ").append(toIndentedString(assetCode)).append("\n");
    sb.append("    assetScale: ").append(toIndentedString(assetScale)).append("\n");
    sb.append("    authServer: ").append(toIndentedString(authServer)).append("\n");
    sb.append("    resourceServer: ").append(toIndentedString(resourceServer)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `publicName` to the URL query string
    if (getPublicName() != null) {
      joiner.add(String.format("%spublicName%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPublicName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `assetCode` to the URL query string
    if (getAssetCode() != null) {
      joiner.add(String.format("%sassetCode%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAssetCode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `assetScale` to the URL query string
    if (getAssetScale() != null) {
      joiner.add(String.format("%sassetScale%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAssetScale()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `authServer` to the URL query string
    if (getAuthServer() != null) {
      joiner.add(String.format("%sauthServer%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAuthServer()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `resourceServer` to the URL query string
    if (getResourceServer() != null) {
      joiner.add(String.format("%sresourceServer%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getResourceServer()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

